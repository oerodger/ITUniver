@using Docflow.Extensions
@using Docflow.Models
@model Docflow.Models.FolderViewModel

@{
    var title = Model.CurrentFolder != null ? Model.CurrentFolder.Name : "Хранилище документов";
    ViewBag.Title = title;
    var currentFolderId = Model.CurrentFolder != null ? Model.CurrentFolder.Id : (long?)null;
}

<h2>@title</h2>

<p>
    @Html.ActionLink("Создать папку", "Create", new { id = currentFolderId })
    @if (currentFolderId.HasValue)
    {
     @Html.ActionLink("Создать документ", "Create", "Document", new { id = currentFolderId }, null)
    }
</p>

    <table class="table">
        <tr>
            <th>
                @if (currentFolderId.HasValue)
                {
                    @Html.SortLink("Название", "Name", "Index", "Folder", new RouteValueDictionary { { "id", currentFolderId } })
                }
                else
                {
                    @: Название
                }
            </th>
            <th>
                @if (currentFolderId.HasValue)
                {
                    @Html.SortLink("Дата изменения", "ChangeDate", "Index", "Folder", new RouteValueDictionary { { "id", currentFolderId } })
                }
                else
                {
                     @: Дата изменения
                }
            </th>
            <th>
                @if (currentFolderId.HasValue)
                {
                    @Html.SortLink("Автор изменения", "ChangeAuthor", "Index", "Folder", new RouteValueDictionary { { "id", currentFolderId } })
                }
                else
                {
                    @: Автор изменения
                }
            </th>    
            <th>                
            </th>
        </tr>
        @if (Model.Parent != null)
        {
        <tr>
            <td>
                @Html.ActionLink("/...", "Index", new { id = Model.Parent.Id })
            </td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        }
        @foreach (var item in Model.Folders)
        {
            <tr>
                <td>
                    @Html.ActionLink(item.Name, "Index", new { id = item.Id })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChangeDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ChangeAuthor)
                </td>
                <td>
                        <a href="#" onclick="$('#FolderEdit').dialog('open');">Редактировать</a> |                        
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
            </tr>
        }

    </table>

@(Html.Popup(new PopupOptions {
    Id = "FolderEdit",
    Header = "Редактирование",
    Url = Url.Action("Edit", new RouteValueDictionary { { "id", 8 } })
}))
